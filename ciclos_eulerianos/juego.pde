//como para cada nivel se necesitan matrices y vectores distintos, se crea una funcion para cada nivel, con la idea de que cada funcion "importante" funcione para cada nivel

void juego1() {
  int n= 6;//cantidad de lineas por juego
  int [][]comparacion=new int[5][5]; 
  int []x= {100, 900, 500, 100, 900};
  int []y= {100, 100, 250, 500, 500};
  int [][] conexion={
    {0, 1, 1, 1, 0}, //p1 
    {1, 0, 1, 0, 1}, //p2
    {1, 1, 0, 0, 0}, //p3
    {1, 0, 0, 0, 1}, //p4
    {0, 1, 0, 1, 0}, //p5
  };

  //("definitivamente entro");
  jugar(n, x, y, conexion, comparacion);
}

void juego2() {
  int n=12;
  int [][]comparacion=new int[11][11];
  int []x= {500, 200, 300, 700, 800, 450, 550, 300, 450, 550, 700};
  int []y= {100, 200, 200, 200, 200, 350, 350, 500, 500, 500, 500};
  int [][] conexion={
    {0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0}, //p1 
    {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, //p2
    {0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0}, //p3
    {0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1}, //p4
    {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, //p5
    {0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0}, //p6
    {0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, //p7
    {0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, //p8
    {0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, //p9
    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1}, //p10
    {0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0}  //p11 
  };
  jugar(n, x, y, conexion, comparacion);
}


void juego3() {
  int n=13;
  int [][]comparacion=new int[10][10];
  int []x= {100, 500, 900, 500, 400, 600, 500, 100, 500, 900};
  int []y= {100, 100, 100, 200, 300, 300, 400, 500, 500, 500};
  int [][] conexion={
    {0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, //p1 
    {1, 0, 1, 1, 0, 0, 0, 0, 0, 0}, //p2
    {0, 1, 0, 0, 0, 0, 0, 0, 0, 1}, //p3
    {0, 1, 0, 0, 1, 1, 1, 0, 0, 0}, //p4
    {0, 0, 0, 1, 0, 0, 1, 0, 0, 0}, //p5
    {0, 0, 0, 1, 0, 0, 1, 0, 0, 0}, //p6
    {0, 0, 0, 1, 1, 1, 0, 0, 1, 0}, //p7
    {1, 0, 0, 0, 0, 0, 0, 0, 1, 0}, //p8
    {0, 0, 0, 0, 0, 0, 1, 1, 0, 1}, //p9
    {0, 0, 1, 0, 0, 0, 0, 0, 1, 0}  //p10
  };  
  jugar(n, x, y, conexion, comparacion);
}

void juego4() {
  int n=10 ;
  int [][]comparacion=new int[6][76];
  int []x= {200, 800, 100, 900, 200, 800};
  int []y= {100, 100, 300, 300, 500, 500};
  int [][] conexion={
    {0, 1, 1, 0, 1, 1}, //p1 
    {1, 0, 0, 1, 1, 1}, //p2
    {1, 0, 0, 0, 1, 0}, //p3
    {0, 1, 0, 0, 0, 1}, //p4
    {1, 1, 1, 0, 0, 1}, //p5
    {1, 1, 0, 1, 1, 0}, //p6
  };  
  jugar(n, x, y, conexion, comparacion);
}

void juego5() {
  int n=14;
  int [][]comparacion=new int[10][10];

  int []x= {500, 100, 350, 650, 900, 100, 350, 650, 900, 500};
  int []y= {100, 200, 200, 200, 200, 400, 400, 400, 400, 500};
  int [][] conexion={
    {0, 0, 1, 1, 0, 0, 0, 0, 0, 0}, //p1 
    {0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, //p2
    {1, 1, 0, 1, 0, 1, 0, 0, 0, 0}, //p3
    {1, 0, 1, 0, 1, 0, 0, 0, 1, 0}, //p4
    {0, 0, 0, 1, 0, 0, 0, 1, 0, 0}, //p5
    {0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, //p6
    {0, 1, 0, 0, 0, 1, 0, 1, 0, 1}, //p7
    {0, 0, 0, 0, 1, 0, 1, 0, 1, 1}, //p8
    {0, 0, 0, 1, 0, 0, 0, 1, 0, 0}, //p9
    {0, 0, 0, 0, 0, 0, 1, 1, 0, 0}  //p10
  };  
  jugar(n, x, y, conexion, comparacion);
}
void juego6() {             
  int n=16;
  int [][]comparacion=new int[8][8];
  int []x= {400, 600, 200, 800, 200, 800, 400, 600};
  int []y= {100, 100, 230, 230, 360, 360, 490, 490};
  int [][] conexion={
    {0, 1, 1, 0, 0, 1, 1, 0}, //p1 
    {1, 0, 0, 1, 1, 0, 0, 1}, //p2
    {1, 0, 0, 1, 1, 0, 0, 1}, //p3
    {0, 1, 1, 0, 0, 1, 1, 0}, //p4
    {0, 1, 1, 0, 0, 1, 1, 0}, //p5
    {1, 0, 0, 1, 1, 0, 0, 1}, //p6
    {1, 0, 0, 1, 1, 0, 0, 1}, //p7
    {0, 1, 1, 0, 0, 1, 1, 0}, //p8
  };
  jugar(n, x, y, conexion, comparacion);
}